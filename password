

RtcAlmJDi302SO64


mongodb+srv://bonfacewaithaka615:RtcAlmJDi302SO64@whinchester.893ep1m.mongodb.net/?retryWrites=true&w=majority&appName=Whinchester




mongodb+srv://bonfacewaithaka615:RtcAlmJDi302SO64@whinchester.893ep1m.mongodb.net/?retryWrites=true&w=majority&appName=Whinchester












HiHiIcEBcICNZmWC

mongodb+srv://bonnieway615:HiHiIcEBcICNZmWC@nayboy.bflc4dw.mongodb.net/




mongodb+srv://bonnieway615:HiHiIcEBcICNZmWC@nayboy.bflc4dw.mongodb.net/?retryWrites=true&w=majority&appName=nayboy



//68928289179-5oibp6gvvf5h2q5983cchsk4827lv7tn.apps.googleusercontent.com

//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






//1063072946201-8kafcqbf73e3f676rbl0q76hhaj65bm3.apps.googleusercontent.com



























"use client";
import { Box, Button, Card, Grid, TextField, Typography } from '@mui/material';
import axios from 'axios';
import { useState } from 'react';
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

export default function LoginWrapper() {
    const [loginValues, setLoginValues] = useState({
        email: "",
        password: "",
    });

    const handleLoginChange = (e) => {
        const { name, value } = e.target;
        setLoginValues(prevState => ({
            ...prevState,
            [name]: value
        }));
    };

    const handleLogin = async (e) => {
        e.preventDefault();
        try {
            const response = await axios.post('http://localhost:50001/signin', loginValues);
            console.log('loginValues',loginValues)
            toast.success('User logged in successfully');
            console.log('Response:', response.data); 
        } catch (error) {
            toast.error('Incorrect login details');
            console.error('Failed to login', error);
        }
    };

    return (
        <Box sx={{
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            padding: "100px 200px",
        }}>
            <Card sx={{ padding: "20px 40px" }}>
                <Box sx={{
                    display: "flex",
                    justifyContent: "center",
                    marginBottom: "20px",
                }}>
                    <Box>
                        <Typography variant='h4'>Login</Typography>
                        <Typography variant='h6'>Welcome!</Typography>
                    </Box>
                </Box>
                <Box>
                    <form onSubmit={handleLogin}>
                        <Grid container spacing={4}>
                            <Grid item xs={12}>
                                <TextField
                                    fullWidth
                                    name='email'
                                    label="Email"
                                    type='email'
                                    required
                                    value={loginValues.email}
                                    onChange={handleLoginChange}

                                />
                            </Grid>
                            <Grid item xs={12}>
                                <TextField
                                    fullWidth
                                    name='password'
                                    label='Password'
                                    type='password'
                                    required
                                    value={loginValues.password}
                                    onChange={handleLoginChange}
                                />
                            </Grid>
                            <Grid item xs={12}>
                                <Button variant='outlined'>Cancel</Button>
                                <Button variant='contained' type='submit'>Login</Button>
                            </Grid>
                            <Grid item xs={12}>
                                <Typography lineHeight={2} variant='body'>Forgot password?</Typography>
                            </Grid>
                        </Grid>
                    </form>
                </Box>
            </Card>
        </Box>
    );
}











app.post('/signin', async (req, res) => {
    const { email, password } = req.body;

    console.log('Email:', email); 
    console.log('Password:', password);

    try {
        const user = await db.collection('users').findOne({ email });
        if (!user) {
            return res.status(401).json({ message: 'Incorrect login details' });
        }

        // Check if the password matches (assuming plain text)
        if (user.password !== password) {
            return res.status(401).json({ message: 'Incorrect login details' });
        }

        res.status(200).json({ message: 'User logged in successfully' });
    } catch (error) {
        console.error('Error during login:', error);
        res.status(500).json({ message: 'Internal server error' });
    }
});
